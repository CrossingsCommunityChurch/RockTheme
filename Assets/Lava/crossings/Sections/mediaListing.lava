{% assign imageStorageUrl = 'Global' | Attribute:'ImageURL' | Prepend:'https://' %}
{% assign imageSize = '/fit-in/450x325' %}
{% assign mediaData = 'Combinedmedia' | PersistedDataset %}

<div class="media-list">
  <div class="media-search">
    <div class="container">
      {% assign filterLists = mediaData.FilterLists %}
      {[ mediaFilters lists:filterLists ]}
      <div class="media-list-items" data-aos="fade-up">
        <div class="row flex-row flex-wrap">

            {% assign topicFilter = PageParameter['topic'] %}
            {% assign speakerFilter = PageParameter['speaker'] %}
            {% assign bookFilter = PageParameter['book'] %}

            {% assign mediaItems = mediaData.Messages %}

            {%- for item in mediaItems -%}

              {% comment %} Filter out any messages that don't match the currently selected filter {% endcomment %}
              {% if topicFilter != null and topicFilter != "" %}
                {% assign containsTopic = item.Topics | Contains:topicFilter %}
                {% if containsTopic == false %}
                  {% continue %}
                {% endif %}
              {% endif %}
              {% if bookFilter != null and bookFilter != "" %}
                {% assign containsBook = item.Books | RegExMatch:bookFilter %}
                {% if containsBook == false %}
                  {% continue %}
                {% endif %}
              {% endif %}
              {% if speakerFilter != null and speakerFilter != "" and item.Speaker != speakerFilter %}{% continue %}{% endif %}

              {% assign imageUrlPath = item.AssetImage | Url:'localpath' %}
              {% assign imageUrl = imageStorageUrl | Append: imageSize | Append:imageUrlPath %}

              {% if item.Image != empty %}
                {% assign imageUrl = item.Image %}
              {% endif %}

              {%- comment -%}
                Swapped this to use slugs, we need to make sure the route is setup - we may need to figure out how to make slugs unique if there is no logic for that built-in
              {%- endcomment -%}
              {%- comment -%} The link is coming from a mixture of data returned in the dataset now
              {%- assign itemPrimarySlug = item.PrimarySlug | Trim -%}
                {% assign parentSeries = item.ParentItems | First | Property:'ContentChannelItem' %}
                {% assign parentSlug = parentSeries.PrimarySlug %}
              {%- if LinkedPages.DetailPage contains '{MediaSlug}' and itemPrimarySlug != '' -%}
                {%- assign itemLink = LinkedPages.DetailPage | Replace:'{MediaSlug}', item.PrimarySlug | Replace:'{SeriesSlug}', parentSlug | Prepend:'/' -%}
              {%- else -%}
                {%- if LinkedPages.DetailPage contains '{MediaSlug}' -%}
                  {%- assign itemLink = LinkedPages.DetailPage | Replace:'{MediaSlug}',item.Id | | Replace:'{SeriesSlug}', parentSlug | Prepend:'/' -%}
                {%- else -%}
                  {%- capture itemLink -%}{{ LinkedPages.DetailPage }}?Item={{ item.Id }}{%- endcapture -%}
                {%- endif -%}
              {%- endif -%}

              {%- endcomment -%}

              {% assign date = item.StartDate %}
              {% assign title = item.Title %}
              {% assign subTitle = item.SubTitle %}
              {% assign date = item.PublishDateTime %}
              {% assign itemLink = item.PrimarySlug | Prepend:'/media/' %}

              {% if item.Series %}
                {% assign seriesTitle = item.Series.Title %}
                {% assign itemLink = item.PrimarySlug | Prepend: '/' | Prepend:item.Series.Slug | Prepend:'/media/'  %}
              {% endif %}

              {[ cardMedia link:'{{ itemLink }}' title:'{{ title }}' series:'{{ seriesTitle }}' img:'{{ imageUrl }}' actiontext:'Watch' date:'{{ date }}' ]}
            {% endfor %}
          {%- comment -%}
            End Loop over this card
          {%- endcomment -%}
        </div>
      </div>
    </div>
  </div>
</div>
